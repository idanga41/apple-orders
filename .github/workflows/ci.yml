name: CI & Deploy

on:
  push:
    branches:
      - main
      - 'feature/**'   # כל פיצ'ר-ברנצ׳
  pull_request:
    branches:
      - main

jobs:
  tests:
    name: Run unit tests
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.11'

      - name: Install deps
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      - name: Run tests
        run: python -m unittest -v

  deploy:
    name: Deploy (main only, after tests)
    needs: tests
    runs-on: ubuntu-latest
    if: github.event_name == 'push' && github.ref == 'refs/heads/main'
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      # אופציונלי: Build & Push Docker image (ידרוש סודות ל-Docker Hub)
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Login to Docker Hub
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      - name: Build & Push image (if Docker Hub secrets exist)
        if: ${{ secrets.DOCKERHUB_USERNAME && secrets.DOCKERHUB_TOKEN }}
        uses: docker/build-push-action@v6
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/apple-orders-app:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/apple-orders-app:${{ github.sha }}

      # Deploy ל-Kubernetes (יש 2 וריאציות — בחר את מה שמתאים לך)

      # וריאציה A: kubectl עם קבצי YAML (apple-deployment.yaml / apple-service.yaml)
      - name: Write kubeconfig from secret
        if: ${{ secrets.KUBE_CONFIG }}
        run: |
            mkdir -p $HOME/.kube
            echo "${KUBE_CONFIG}" > $HOME/.kube/config
        env:
          KUBE_CONFIG: ${{ secrets.KUBE_CONFIG }}

      - name: Apply manifests (if KUBE_CONFIG exists)
        if: ${{ secrets.KUBE_CONFIG }}
        run: |
          kubectl apply -f apple-deployment.yaml
          kubectl apply -f apple-service.yaml
          kubectl rollout status deploy/apple-orders --timeout=120s || true

      # וריאציה B: Helm (אם יש לך chart תחת deploy/helm/apple-orders)
      # - name: Helm upgrade (if KUBE_CONFIG exists)
      #   if: ${{ secrets.KUBE_CONFIG }}
      #   run: |
      #     helm upgrade --install apple-orders ./deploy/helm/apple-orders \
      #       --set image.repository=${{ secrets.DOCKERHUB_USERNAME }}/apple-orders-app \
      #       --set image.tag=${{ github.sha }} \
      #       --wait --timeout 120s

      - name: No deployment secrets found - skipping deploy
        if: ${{ !(secrets.KUBE_CONFIG) }}
        run: echo "Skipping deploy: KUBE_CONFIG secret not set."

